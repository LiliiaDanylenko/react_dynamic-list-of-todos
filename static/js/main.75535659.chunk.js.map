{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","visibleTodos","visibleModal","setVisibleModal","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","React","memo","todos","setVisibleTodos","useState","filter","setFilter","value","setValue","filterTodos","fil","query","currentTodos","toLowerCase","includes","onSubmit","e","preventDefault","onChange","event","newFilter","target","placeholder","newValue","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","TodoModal","user","setUser","useEffect","userId","href","email","name","App","setTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75535659.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  visibleTodos: Todo[];\n  visibleModal: Todo | null;\n  setVisibleModal: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  visibleTodos, visibleModal, setVisibleModal,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {visibleTodos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo === visibleModal,\n            })}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  todo.completed ? 'has-text-success' : 'has-text-danger',\n                )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setVisibleModal(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={\n                    classNames(\n                      'far',\n                      todo === visibleModal ? 'fa-eye-slash' : 'fa-eye',\n                    )\n                  }\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setVisibleTodos: (todos: Todo[]) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  todos, setVisibleTodos,\n}) => {\n  const [filter, setFilter] = useState('all');\n  const [value, setValue] = useState('');\n\n  const filterTodos = (fil: string, query: string) => {\n    const currentTodos = query === '' ? todos : todos.filter(todo => (\n      todo.title.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    switch (fil) {\n      case 'all':\n        setVisibleTodos(currentTodos);\n\n        return;\n\n      case 'active':\n        setVisibleTodos(currentTodos.filter(todo => todo.completed === false));\n\n        return;\n\n      case 'completed':\n        setVisibleTodos(currentTodos.filter(todo => todo.completed === true));\n\n        return;\n\n      default:\n        setVisibleTodos(currentTodos);\n    }\n  };\n\n  const handleChangeFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newFilter = event.target.value;\n\n    setFilter(newFilter);\n    filterTodos(newFilter, value);\n  };\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    setValue(newValue);\n    filterTodos(filter, newValue);\n  };\n\n  const deleteValue = () => {\n    setValue('');\n    filterTodos(filter, '');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={e => e.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleChangeFilter}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={handleChangeInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {value && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={deleteValue}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  visibleModal: Todo;\n  setVisibleModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  visibleModal, setVisibleModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(visibleModal.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${visibleModal.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setVisibleModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {visibleModal.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {visibleModal.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const [visibleModal, setVisibleModal] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n    getTodos().then(setVisibleTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setVisibleTodos={setVisibleTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  visibleTodos={visibleTodos}\n                  visibleModal={visibleModal}\n                  setVisibleModal={setVisibleModal}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {visibleModal && (\n        <TodoModal\n          visibleModal={visibleModal}\n          setVisibleModal={setVisibleModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}